apply plugin: 'com.android.application'
apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.7.4+"
}

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"
    defaultConfig {
        applicationId "com.example.usuario.integrationmaps"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    signingConfigs {
        release {
            storeFile file("Iting.jks")
            storePassword "passpass"
            keyAlias "Iting"
            keyPassword "passpass"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug {
            debuggable true
            testCoverageEnabled true
        }
    }

    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }
}


dependencies {
    implementation 'com.android.support:support-v4:26.0.0'
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:appcompat-v7:26.0.0'
    compile 'com.android.volley:volley:1.0.0'
    compile 'com.braintreepayments.api:drop-in:3.+'
    compile 'com.google.android.gms:play-services-maps:11.0.2'
    compile 'com.android.support:recyclerview-v7:26.0.0-alpha1'
    compile 'com.android.support:cardview-v7:26.0.0-alpha1'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.nightonke:boommenu:1.0.9'
    compile 'com.android.support:design:26.0.0'
    compile 'com.sun.mail:android-mail:1.6.0'
    compile 'com.sun.mail:android-activation:1.6.0'
    compile 'com.android.support:support-v13:26.0.0'
    compile 'com.koushikdutta.ion:ion:2.1.9'
    compile 'org.slf4j:slf4j-api:1.7.21'
    testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
    compile 'com.github.tony19:logback-android-core:1.1.1-6'
    compile('com.github.tony19:logback-android-classic:1.1.1-6') {
        // workaround issue #73
        exclude group: 'com.google.android', module: 'android'
    }
    testCompile 'junit:junit:4.12'
    testCompile group: 'org.databene', name: 'contiperf', version: '2.2.0'
    testImplementation "org.robolectric:robolectric:3.5.1"
    testCompile 'org.mockito:mockito-core:2.7.22'
    androidTestCompile 'org.mockito:mockito-android:2.7.22'
    compile 'de.hdodenhof:circleimageview:2.2.0'


}

task createTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {
    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code-coverage/connected/*coverage.ec"
    ])
}
